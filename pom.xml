<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>jacocotest</groupId>
  <artifactId>jacocotest.demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <dependencies>
  <!-- testNG依赖jar-->
	<dependency>
	  <groupId>org.testng</groupId>
	  <artifactId>testng</artifactId>
	  <version>6.8</version>
	 <!--  <scope>test</scope> -->
	</dependency>
  
  	<!-- 依赖reportNg 关联testNg -->
	<dependency>
       <groupId>org.uncommons</groupId>
       <artifactId>reportng</artifactId>
       <version>1.1.5</version>
       <scope>system</scope>
       <exclusions>
           <exclusion>
               <groupId>org.testng</groupId>
               <artifactId>testng</artifactId>
           </exclusion>
       </exclusions>
       <systemPath>${project.basedir}/lib/reportng-1.1.5.jar</systemPath>
    </dependency>
    <dependency>
        <groupId>velocity</groupId>
        <artifactId>velocity</artifactId>
        <version>1.4</version>
    </dependency>	
	<!-- 因reportng不稳定，需要配合guice -->
	<dependency>	
		<groupId>com.google.inject</groupId>		
		<artifactId>guice</artifactId>		
		<version>4.0</version>		
		<scope>test</scope>		
	</dependency>			
	<dependency>		
		<groupId>velocity</groupId>		
		<artifactId>velocity-dep</artifactId>		
		<version>1.4</version>	
	</dependency>	
	
  </dependencies>
  
  <build>  
   	<plugins>  
   		<!-- 添加插件,添加ReportNg的监听器，修改最后的TestNg的报告 -->
  		<plugin>
		  <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.19</version>
          <configuration>
	          <properties>
	            <property>
	            <name>usedefaultlisteners</name>  <!-- 将TestNG的defaultListener设置为false  -->
	            <value>false</value>
			  	</property>
				<property>
				  <name>listener</name>   <!-- HTMLReporter用来生成HTML格式的Report，JUnitXMLReporter用来生成xml格式的report  -->
				  <value>org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter</value>
				</property>
			  </properties>
			  <suiteXmlFiles>  <!-- 制定执行测试用例集的文件 -->
                 <suiteXmlFile>testng.xml</suiteXmlFile>
              </suiteXmlFiles>
              <!-- <workingDirectory>target/</workingDirectory>  生成的测试报告的路径，根目录的路径 -->
              <forkMode>always</forkMode>
          </configuration>
 		</plugin>
    	<plugin>
		    <groupId>org.jacoco</groupId>
		    <artifactId>jacoco-maven-plugin</artifactId>
		    <version>0.7.5.201505241946</version>
		    <executions>
		        <!--
		           准备指向Jacoco运行时Agent的属性，在测试执行之前传递给虚拟机参数
		        -->
		        <execution>
		            <id>pre-unit-test</id>
		            <goals>
		                <goal>prepare-agent</goal>
		            </goals>
		            <configuration>
		                <!-- 设置覆盖率数据文件路径 -->
		                <destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
		                <!-- 设置属性名称，Maven surefire插件需要引用这个作为命令行参数
		                -->
		                <propertyName>surefireArgLine</propertyName>
		            </configuration>
		        </execution>
		        <!--
		           	 确保在单元测试执行之后生成覆盖率报告
		        -->
		        <execution>
		            <id>post-unit-test</id>
		            <phase>test</phase>
		            <goals>
		                <goal>report</goal>
		            </goals>
		            <configuration>
		                <!-- 引用覆盖率文件的路径-->
		                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
		                <!-- 设置覆盖率报告存放路径. -->
		                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
		            </configuration>
		        </execution>
		    </executions>
		</plugin>
       <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-surefire-plugin</artifactId>
		    <version>2.15</version>
		    <configuration>
		        <!-- 设置虚拟机参数 -->
		        <argLine>${surefireArgLine}</argLine>
		        <!-- 排除集成测试的代码. -->
		       <!--  <excludes>
		            <exclude>**/IT*.java</exclude>
		        </excludes> -->
		    </configuration>
		</plugin>
   </plugins>   
  </build> 
</project>